["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/axios/lib/helpers/isURLSameOrigin.js"],"~:js","shadow$provide.module$node_modules$axios$lib$helpers$isURLSameOrigin=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=void 0;var _utils=_interopRequireDefault(require(\"module$node_modules$axios$lib$utils\"));global=_interopRequireDefault(require(\"module$node_modules$axios$lib$platform$index\")).default.isStandardBrowserEnv?function(){function resolveURL(url){msie&&\n(urlParsingNode.setAttribute(\"href\",url),url=urlParsingNode.href);urlParsingNode.setAttribute(\"href\",url);return{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,\"\"):\"\",host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\\?/,\"\"):\"\",hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,\"\"):\"\",hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:\"/\"===urlParsingNode.pathname.charAt(0)?urlParsingNode.pathname:\n\"/\"+urlParsingNode.pathname}}const msie=/(msie|trident)/i.test(navigator.userAgent),urlParsingNode=document.createElement(\"a\");let originURL;originURL=resolveURL(window.location.href);return function(requestURL){requestURL=_utils.default.isString(requestURL)?resolveURL(requestURL):requestURL;return requestURL.protocol===originURL.protocol&&requestURL.host===originURL.host}}():function(){return function(){return!0}}();exports.default=global}","~:source","shadow$provide[\"module$node_modules$axios$lib$helpers$isURLSameOrigin\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"./../utils.js\"));\n\nvar _index = _interopRequireDefault(require(\"../platform/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = _index.default.isStandardBrowserEnv ? // Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  const msie = /(msie|trident)/i.test(navigator.userAgent);\n  const urlParsingNode = document.createElement('a');\n  let originURL;\n  /**\n  * Parse a URL to discover it's components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n\n  function resolveURL(url) {\n    let href = url;\n\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n\n    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n\n  originURL = resolveURL(window.location.href);\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n\n  return function isURLSameOrigin(requestURL) {\n    const parsed = _utils.default.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() : // Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();\n\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$axios$lib$utils","~$shadow.js","~$module$node_modules$axios$lib$platform$index"]],"~:properties",["^5",["hostname","protocol","host","hash","pathname","__esModule","href","value","port","search","default"]],"~:compiled-at",1677224415773,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$axios$lib$helpers$isURLSameOrigin.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYlHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAII,OAASP,sBAAA,CAAuBH,OAAA,CAAQ,qCAAR,CAAvB,CAMTW,OAAAA,CAJSR,sBAAAS,CAAuBZ,OAAA,CAAQ,8CAAR,CAAvBY,CAISN,CAAAA,OAAQO,CAAAA,oBAAf,CAEfC,QAA2B,EAAG,CAW5BC,QAASA,WAAU,CAACC,GAAD,CAAM,CAGnBC,IAAJ;CAEEC,cAAeC,CAAAA,YAAf,CAA4B,MAA5B,CAAoCC,GAApC,CACA,CAAAA,GAAA,CAAOF,cAAeE,CAAAA,IAHxB,CAMAF,eAAeC,CAAAA,YAAf,CAA4B,MAA5B,CAAoCC,GAApC,CAEA,OAAO,CACLA,KAAMF,cAAeE,CAAAA,IADhB,CAELC,SAAUH,cAAeG,CAAAA,QAAf,CAA0BH,cAAeG,CAAAA,QAASC,CAAAA,OAAxB,CAAgC,IAAhC,CAAsC,EAAtC,CAA1B,CAAsE,EAF3E,CAGLC,KAAML,cAAeK,CAAAA,IAHhB,CAILC,OAAQN,cAAeM,CAAAA,MAAf,CAAwBN,cAAeM,CAAAA,MAAOF,CAAAA,OAAtB,CAA8B,KAA9B,CAAqC,EAArC,CAAxB,CAAmE,EAJtE,CAKLG,KAAMP,cAAeO,CAAAA,IAAf,CAAsBP,cAAeO,CAAAA,IAAKH,CAAAA,OAApB,CAA4B,IAA5B,CAAkC,EAAlC,CAAtB,CAA8D,EAL/D,CAMLI,SAAUR,cAAeQ,CAAAA,QANpB,CAOLC,KAAMT,cAAeS,CAAAA,IAPhB,CAQLC,SAAgD,GAAtC,GAAAV,cAAeU,CAAAA,QAASC,CAAAA,MAAxB,CAA+B,CAA/B,CAAA,CAA4CX,cAAeU,CAAAA,QAA3D;AAAsE,GAAtE,CAA4EV,cAAeU,CAAAA,QARhG,CAXgB,CAVzB,MAAMX,KAAO,iBAAkBa,CAAAA,IAAlB,CAAuBC,SAAUC,CAAAA,SAAjC,CAAb,CACMd,eAAiBe,QAASC,CAAAA,aAAT,CAAuB,GAAvB,CACvB,KAAIC,SA+BJA,UAAA,CAAYpB,UAAA,CAAWqB,MAAOC,CAAAA,QAASjB,CAAAA,IAA3B,CAQZ,OAAOkB,SAAwB,CAACC,UAAD,CAAa,CACpCC,UAAAA,CAAS9B,MAAOJ,CAAAA,OAAQmC,CAAAA,QAAf,CAAwBF,UAAxB,CAAA,CAAsCxB,UAAA,CAAWwB,UAAX,CAAtC,CAA+DA,UAC9E,OAAOC,WAAOnB,CAAAA,QAAd,GAA2Bc,SAAUd,CAAAA,QAArC,EAAiDmB,UAAOjB,CAAAA,IAAxD,GAAiEY,SAAUZ,CAAAA,IAFjC,CA1ChB,CAA9B,EAFe,CAiDfmB,QAA8B,EAAG,CAC/B,MAAOJ,SAAwB,EAAG,CAChC,MAAO,CAAA,CADyB,CADH,CAAjC,EAMApC,QAAQI,CAAAA,OAAR,CAAkBK,MArEgG;\",\n\"sources\":[\"node_modules/axios/lib/helpers/isURLSameOrigin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$axios$lib$helpers$isURLSameOrigin\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _utils = _interopRequireDefault(require(\\\"./../utils.js\\\"));\\n\\nvar _index = _interopRequireDefault(require(\\\"../platform/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar _default = _index.default.isStandardBrowserEnv ? // Standard browser envs have full support of the APIs needed to test\\n// whether the request URL is of the same origin as current location.\\nfunction standardBrowserEnv() {\\n  const msie = /(msie|trident)/i.test(navigator.userAgent);\\n  const urlParsingNode = document.createElement('a');\\n  let originURL;\\n  /**\\n  * Parse a URL to discover it's components\\n  *\\n  * @param {String} url The URL to be parsed\\n  * @returns {Object}\\n  */\\n\\n  function resolveURL(url) {\\n    let href = url;\\n\\n    if (msie) {\\n      // IE needs attribute set twice to normalize properties\\n      urlParsingNode.setAttribute('href', href);\\n      href = urlParsingNode.href;\\n    }\\n\\n    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\\n\\n    return {\\n      href: urlParsingNode.href,\\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\\n      host: urlParsingNode.host,\\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, '') : '',\\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\\n      hostname: urlParsingNode.hostname,\\n      port: urlParsingNode.port,\\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\\n    };\\n  }\\n\\n  originURL = resolveURL(window.location.href);\\n  /**\\n  * Determine if a URL shares the same origin as the current location\\n  *\\n  * @param {String} requestURL The URL to test\\n  * @returns {boolean} True if URL shares the same origin, otherwise false\\n  */\\n\\n  return function isURLSameOrigin(requestURL) {\\n    const parsed = _utils.default.isString(requestURL) ? resolveURL(requestURL) : requestURL;\\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\\n  };\\n}() : // Non standard browser envs (web workers, react-native) lack needed support.\\nfunction nonStandardBrowserEnv() {\\n  return function isURLSameOrigin() {\\n    return true;\\n  };\\n}();\\n\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_utils\",\"_default\",\"_index\",\"isStandardBrowserEnv\",\"standardBrowserEnv\",\"resolveURL\",\"url\",\"msie\",\"urlParsingNode\",\"setAttribute\",\"href\",\"protocol\",\"replace\",\"host\",\"search\",\"hash\",\"hostname\",\"port\",\"pathname\",\"charAt\",\"test\",\"navigator\",\"userAgent\",\"document\",\"createElement\",\"originURL\",\"window\",\"location\",\"isURLSameOrigin\",\"requestURL\",\"parsed\",\"isString\",\"nonStandardBrowserEnv\"]\n}\n"]